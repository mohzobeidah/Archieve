// <auto-generated />
using System;
using Archieve.DataAccess.DataConfigration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Archieve.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200623115036_ibrahim_23062020_1450")]
    partial class ibrahim_23062020_1450
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassificationName = "ترقين قيد ",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(7933),
                            IsDelete = false,
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(8411)
                        },
                        new
                        {
                            Id = 2,
                            ClassificationName = " طلب اجازة",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9033),
                            IsDelete = false,
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9053)
                        },
                        new
                        {
                            Id = 3,
                            ClassificationName = " طلب صيانة",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9069),
                            IsDelete = false,
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9072)
                        },
                        new
                        {
                            Id = 4,
                            ClassificationName = " اوامر ادارية",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9077),
                            IsDelete = false,
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(9080)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.ImageArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ContentMail")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FK_MailArchiveID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FK_MailArchiveID");

                    b.ToTable("ImageArchives");
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.MailArchive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FK_ClassificationId")
                        .HasColumnType("int");

                    b.Property<int>("FK_FromJehazId")
                        .HasColumnType("int");

                    b.Property<int>("FK_MailTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FK_PostTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FK_SecurityId")
                        .HasColumnType("int");

                    b.Property<int>("FK_StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("FK_ToJehazId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FK_ClassificationId");

                    b.HasIndex("FK_MailTypeId");

                    b.HasIndex("FK_PostTypeId");

                    b.HasIndex("FK_SecurityId");

                    b.HasIndex("FK_StatusId");

                    b.ToTable("MailArchives");
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.MailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MailTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 45, DateTimeKind.Local).AddTicks(5779),
                            IsDelete = false,
                            MailName = "داخي",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 48, DateTimeKind.Local).AddTicks(3164)
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 49, DateTimeKind.Local).AddTicks(5861),
                            IsDelete = false,
                            MailName = "خارجي",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 49, DateTimeKind.Local).AddTicks(5915)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.PostType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(3259),
                            IsDelete = false,
                            PostName = "صادر",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(3737)
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(4321),
                            IsDelete = false,
                            PostName = "وارد",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(4342)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Securities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(1246),
                            IsDelete = false,
                            SecurityName = "عادي",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(1752)
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(2368),
                            IsDelete = false,
                            SecurityName = "سري",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 50, DateTimeKind.Local).AddTicks(2387)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(8539),
                            IsDelete = false,
                            StatusName = "منجر",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(9061)
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(9645),
                            IsDelete = false,
                            StatusName = "غير منجر",
                            UpdateDate = new DateTime(2020, 6, 23, 14, 50, 36, 51, DateTimeKind.Local).AddTicks(9665)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.StructureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StructureTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "الجهاز",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(7151),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(7628)
                        },
                        new
                        {
                            Id = 2,
                            Description = "الادارة",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8468),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8491)
                        },
                        new
                        {
                            Id = 3,
                            Description = "دائرة",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8507),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8510)
                        },
                        new
                        {
                            Id = 4,
                            Description = "قسم",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8516),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8519)
                        },
                        new
                        {
                            Id = 5,
                            Description = "وحدة",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8524),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8527)
                        },
                        new
                        {
                            Id = 6,
                            Description = "اخرى",
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8535),
                            IsDeleted = false,
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(8538)
                        });
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.WorkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FK_WpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FK_WpId");

                    b.ToTable("WorkPlaces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FK_WpId = 6,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 52, DateTimeKind.Local).AddTicks(9079),
                            IsDeleted = false,
                            ParentId = 0,
                            Text = "عام",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 52, DateTimeKind.Local).AddTicks(9550)
                        },
                        new
                        {
                            Id = 2,
                            FK_WpId = 1,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(262),
                            IsDeleted = false,
                            ParentId = 1,
                            Text = "المديرية العامة للعمليات المركزية",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(280)
                        },
                        new
                        {
                            Id = 3,
                            FK_WpId = 6,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(296),
                            IsDeleted = false,
                            ParentId = 1,
                            Text = "هئيات خارجية",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(300)
                        },
                        new
                        {
                            Id = 4,
                            FK_WpId = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(306),
                            IsDeleted = false,
                            ParentId = 2,
                            Text = "ادارة الاتصالات",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(309)
                        },
                        new
                        {
                            Id = 5,
                            FK_WpId = 3,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(313),
                            IsDeleted = false,
                            ParentId = 4,
                            Text = "دائرة نظم المعلومات",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(316)
                        },
                        new
                        {
                            Id = 6,
                            FK_WpId = 4,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(369),
                            IsDeleted = false,
                            ParentId = 5,
                            Text = "قسم البرمجة",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(372)
                        },
                        new
                        {
                            Id = 7,
                            FK_WpId = 2,
                            InsertDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(379),
                            IsDeleted = false,
                            ParentId = 2,
                            Text = "ادارة الامداد",
                            UpdatedDate = new DateTime(2020, 6, 23, 14, 50, 36, 53, DateTimeKind.Local).AddTicks(382)
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.ImageArchive", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.MailArchive", "MailArchive")
                        .WithMany("imageArchives")
                        .HasForeignKey("FK_MailArchiveID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.MailArchive", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.Classification", "Classification")
                        .WithMany("mailArchives")
                        .HasForeignKey("FK_ClassificationId");

                    b.HasOne("Archieve.DatabaseLayer.Models.MailType", "MailType")
                        .WithMany("mailArchives")
                        .HasForeignKey("FK_MailTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archieve.DatabaseLayer.Models.PostType", "PostType")
                        .WithMany("mailArchives")
                        .HasForeignKey("FK_PostTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archieve.DatabaseLayer.Models.Security", "Security")
                        .WithMany("mailArchives")
                        .HasForeignKey("FK_SecurityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archieve.DatabaseLayer.Models.Status", "Status")
                        .WithMany("mailArchives")
                        .HasForeignKey("FK_StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Archieve.DatabaseLayer.Models.WorkPlace", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.StructureType", "StructureType")
                        .WithMany("workPlaces")
                        .HasForeignKey("FK_WpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Archieve.DatabaseLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Archieve.DatabaseLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
